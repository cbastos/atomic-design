@import 'settings';
@import 'utility/functions';
@import 'utility/fonts';

/*--------------------------------
	Typography
*/

@include font-face('Lato Bold', 'lato', 'lato-bold');
@include font-face('Lato Light', 'lato', 'lato-light');
@include font-face('Lato Regular', 'lato', 'lato-regular');
@include font-face('Lato Italic', 'lato', 'lato-italic');


// font families

$stack: 'Lato Regular', Arial, sans-serif;
$stack--heading: 'Lato Regular', Arial, sans-serif;
$stack--light: 'Lato Light', Arial, sans-serif;

// font sizes

$h--xxx-small: rem(14px);
$h--xx-small: rem(16px);
$h--x-small: rem(18px);
$h--small: rem(20px);
$h--medium: rem(24px);
$h--large: rem(30px);
$h--x-large: rem(36px);
$h--xx-large: rem(48px);
$h--xxx-large: rem(64px);

$p: rem(14px);
$p--small: rem(12px);
$p--medium: rem(18px);
$p--large: rem(24px);

// line-height ratios

$lh: 1.5;
$lh--x-small: 1.1;
$lh--small: 1.25;
$lh--large: 1.75;


// letter spacing
$ls: (
	base: -30
);

// weights

// $w--light: 300;
$w--normal: 400;
// $w--semibold: 600;
$w--bold: 700;
// $w--heavy: 800;



/*--------------------------------
	Layout
*/

// basic spacing units

$spacing-unit: rem(25px);
$spacing-unit--x-small: rem(15px);
$spacing-unit--small: rem(20px);
$spacing-unit--large: rem(40px);
$spacing-unit--x-large: rem(60px);

$rel-spacing-unit: 1em;
$rel-spacing-unit--small: .5em;


// page gutter

$page-gutter: $spacing-unit--small;
$page-gutter--tablet: $spacing-unit;
$page-gutter--desktop: $spacing-unit--large;


// grid

$grid-column-count: 24;
$grid-column-gutter: $spacing-unit--small;
$grid-column-gutter--tablet: $spacing-unit;
$grid-column-gutter--desktop: $spacing-unit--large;


// media queries and breakpoints
// build mobile first 300+

$breakpoints: (
	'phone':        em(375px),
	'phone-wide':   em(480px),
	'phablet':      em(560px),
	'tablet-small': em(640px),
	'tablet':       em(768px),
	'tablet-wide':  em(1024px),
	'desktop':      em(1248px),
	'desktop-wide': em(1440px)
);

$max-width: breakpoint('desktop');


// z-indexing

/*
ordered from high to low
suggested naming convention would be the class/ID the z-index is going on
*/

$z-indexes: (
	'outdated-browser',
	'site-header',
	'site-content',
	'site-footer'
);

/*--------------------------------
	Colours
*/

// Start with assigning color names to specific hex values.
$c--red:    #eb4b5e !default;
$c--orange: #ff9966 !default;
$c--yellow: #ffd500 !default;
$c--green:  #1a9832 !default;
$c--blue:   #0275d8 !default;
$c--teal:   #5bc0de !default;
$c--pink:   #ff5b77 !default;
$c--purple: #B961DE !default;
$c--darkpurple: #6B3482 !default;

// greyscale

$c--black: #1a1a1a !default;
$c--grey-dark: #4d4d4d !default;
$c--grey: #999191 !default;
$c--grey-light: #a0989b !default;
$c--grey-x-light: #CCCCCC !default;
$c--grey-xx-light: #f0e9e9 !default;
$c--grey-xxx-light: #faf7f7 !default;
$c--white: #fff !default;

// brand colours

$c--brand-primary: $c--orange;
$c--brand-secondary: #CD7B51 !default;
$c--brand-success: $c--green !default;
$c--brand-info: $c--teal !default;
$c--brand-warning: $c--orange !default;
$c--brand-danger: $c--red !default;
$c--brand-inverse: $c--grey-dark !default;

// form & message positive/negative colours

$c--positive: $c--green;
$c--negative: $c--red;


// top level element colours

$c--body-bg: $c--white;
$c--body-colour: $c--black;


/*--------------------------------
	Easing/Timing
*/

//	Cubic
$ease--in-cubic: cubic-bezier(.55,.055,.675,.19);
$ease--out-cubic: cubic-bezier(.215,.61,.355,1);
$ease--in-out-cubic: cubic-bezier(.645,.045,.355,1);

//	Circ
$ease--in-circ: cubic-bezier(.6,.04,.98,.335);
$ease--out-circ: cubic-bezier(.075,.82,.165,1);
$ease--in-out-circ: cubic-bezier(.785,.135,.15,.86);

//	Expo
$ease--in-expo: cubic-bezier(.95,.05,.795,.035);
$ease--out-expo: cubic-bezier(.19,1,.22,1);
$ease--in-out-expo: cubic-bezier(1,0,0,1);

//	Quad
$ease--in-quad: cubic-bezier(.55,.085,.68,.53);
$ease--out-quad: cubic-bezier(.25,.46,.450,.94);
$ease--in-out-quad: cubic-bezier(.455,.03,.515,.955);

//	Quart
$ease--in-quart: cubic-bezier(.895,.03,.685,.22);
$ease--out-quart: cubic-bezier(.165,.84,.44,1);
$ease--in-out-quart: cubic-bezier(.77,0,.175,1);

//	Quint
$ease--in-quint: cubic-bezier(.755,.05,.855,.06);
$ease--out-quint: cubic-bezier(.23,1,.320,1);
$ease--in-out-quint: cubic-bezier(.86,0,.07,1);

//	Sine
$ease--in-sine: cubic-bezier(.47,0,.745,.715);
$ease--out-sine: cubic-bezier(.39,.575,.565,1);
$ease--in-out-sine: cubic-bezier(.445,.05,.55,.95);

//	Back
$ease--in-back: cubic-bezier(.6,-.28,.735,.045);
$ease--out-back: cubic-bezier(.175,.885,.32,1.275);
$ease--in-out-back: cubic-bezier(.68,-0.55,.265,1.55);

//	Smooth fade
$ease--smooth-fade: cubic-bezier(.365,.005,.355,1);

// KendoUI Controls Variables
// Puedes probar y exportar las variables en http://themebuilder.telerik.com/kendo-ui

$base-theme:Bootstrap;
$skin-name:'application';
$accent: #007bff;
$secondary: #e4e7eb;
$info: #17a2b8;
$success: #28a745;
$warning: #ffc107;
$error: #dc3545;
$body-bg: #ffffff;
$body-color: #292b2c;
$component-bg: #ffffff;
$component-color: #292b2c;
$card-cap-bg: #f7f7f9;
$card-cap-color: #292b2c;
$series-a: #0275d8;
$series-b: #5bc0de;
$series-c: #5cb85c;
$series-d: #f0ad4e;
$series-e: #e67d4a;
$series-f: #d9534f;